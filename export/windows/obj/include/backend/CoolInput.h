// Generated by Haxe 4.3.6
#ifndef INCLUDED_backend_CoolInput
#define INCLUDED_backend_CoolInput

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(backend,CoolInput)

namespace backend{


class HXCPP_CLASS_ATTRIBUTES CoolInput_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CoolInput_obj OBJ_;
		CoolInput_obj();

	public:
		enum { _hx_ClassId = 0x10084ccd };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="backend.CoolInput")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"backend.CoolInput"); }

		inline static ::hx::ObjectPtr< CoolInput_obj > __new() {
			::hx::ObjectPtr< CoolInput_obj > __this = new CoolInput_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< CoolInput_obj > __alloc(::hx::Ctx *_hx_ctx) {
			CoolInput_obj *__this = (CoolInput_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CoolInput_obj), false, "backend.CoolInput"));
			*(void **)__this = CoolInput_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CoolInput_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CoolInput",61,a0,b2,89); }

		static bool pressed(::String str);
		static ::Dynamic pressed_dyn();

};

} // end namespace backend

#endif /* INCLUDED_backend_CoolInput */ 
