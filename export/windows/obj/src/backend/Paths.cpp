// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_backend_Paths
#include <backend/Paths.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_359943aa63fd1400_9_char,"backend.Paths","char",0x20d05a50,"backend.Paths.char","backend/Paths.hx",9,0x7c630d0b)
HX_LOCAL_STACK_FRAME(_hx_pos_359943aa63fd1400_17_stateAssets,"backend.Paths","stateAssets",0xa16b5d3a,"backend.Paths.stateAssets","backend/Paths.hx",17,0x7c630d0b)
HX_LOCAL_STACK_FRAME(_hx_pos_359943aa63fd1400_21_music,"backend.Paths","music",0x6025dfeb,"backend.Paths.music","backend/Paths.hx",21,0x7c630d0b)
HX_LOCAL_STACK_FRAME(_hx_pos_359943aa63fd1400_25_sound,"backend.Paths","sound",0xd0979c15,"backend.Paths.sound","backend/Paths.hx",25,0x7c630d0b)
namespace backend{

void Paths_obj::__construct() { }

Dynamic Paths_obj::__CreateEmpty() { return new Paths_obj; }

void *Paths_obj::_hx_vtable = 0;

Dynamic Paths_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Paths_obj > _hx_result = new Paths_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Paths_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0d5689de;
}

::String Paths_obj::_hx_char(::String pth,::hx::Null< bool >  __o_isAtlas){
            		bool isAtlas = __o_isAtlas.Default(false);
            	HX_STACKFRAME(&_hx_pos_359943aa63fd1400_9_char)
HXDLIN(   9)		if (isAtlas) {
HXLINE(  10)			return ((HX_("assets/images/characters/atlas/",7e,fa,b8,db) + pth) + HX_(".png",3b,2d,bd,1e));
            		}
            		else {
HXLINE(  12)			return ((HX_("assets/images/characters/spritesheet/",ef,f3,06,b7) + pth) + HX_(".png",3b,2d,bd,1e));
            		}
HXLINE(   9)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Paths_obj,_hx_char,return )

::String Paths_obj::stateAssets(::String pth){
            	HX_STACKFRAME(&_hx_pos_359943aa63fd1400_17_stateAssets)
HXDLIN(  17)		return ((HX_("assets/images/stateAssets/",66,cc,23,93) + pth) + HX_(".png",3b,2d,bd,1e));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Paths_obj,stateAssets,return )

::String Paths_obj::music(::String pth){
            	HX_STACKFRAME(&_hx_pos_359943aa63fd1400_21_music)
HXDLIN(  21)		return ((HX_("assets/audio/music/",8f,e7,4e,7a) + pth) + HX_(".ogg",e1,64,bc,1e));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Paths_obj,music,return )

::String Paths_obj::sound(::String pth){
            	HX_STACKFRAME(&_hx_pos_359943aa63fd1400_25_sound)
HXDLIN(  25)		return ((HX_("assets/audio/sound/",25,d0,61,6d) + pth) + HX_(".ogg",e1,64,bc,1e));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Paths_obj,sound,return )


Paths_obj::Paths_obj()
{
}

bool Paths_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"char") ) { outValue = _hx_char_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"music") ) { outValue = music_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sound") ) { outValue = sound_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"stateAssets") ) { outValue = stateAssets_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Paths_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Paths_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Paths_obj::__mClass;

static ::String Paths_obj_sStaticFields[] = {
	HX_("char",d6,5e,bf,41),
	HX_("stateAssets",74,95,8c,c6),
	HX_("music",a5,d0,5a,10),
	HX_("sound",cf,8c,cc,80),
	::String(null())
};

void Paths_obj::__register()
{
	Paths_obj _hx_dummy;
	Paths_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.Paths",34,17,99,92);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Paths_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Paths_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Paths_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Paths_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Paths_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace backend
