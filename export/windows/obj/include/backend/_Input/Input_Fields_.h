// Generated by Haxe 4.3.6
#ifndef INCLUDED_backend__Input_Input_Fields_
#define INCLUDED_backend__Input_Input_Fields_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(backend,_Input,Input_Fields_)

namespace backend{
namespace _Input{


class HXCPP_CLASS_ATTRIBUTES Input_Fields__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Input_Fields__obj OBJ_;
		Input_Fields__obj();

	public:
		enum { _hx_ClassId = 0x55ba6cba };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="backend._Input.Input_Fields_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"backend._Input.Input_Fields_"); }

		inline static ::hx::ObjectPtr< Input_Fields__obj > __new() {
			::hx::ObjectPtr< Input_Fields__obj > __this = new Input_Fields__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Input_Fields__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Input_Fields__obj *__this = (Input_Fields__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Input_Fields__obj), false, "backend._Input.Input_Fields_"));
			*(void **)__this = Input_Fields__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Input_Fields__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Input_Fields_",11,cb,17,00); }

		static ::Array< ::Dynamic> inputs;
};

} // end namespace backend
} // end namespace _Input

#endif /* INCLUDED_backend__Input_Input_Fields_ */ 
