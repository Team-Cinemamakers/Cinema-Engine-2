// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_backend_Input
#include <backend/Input.h>
#endif
#ifndef INCLUDED_backend_JsonFunctions
#include <backend/JsonFunctions.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_9eabdfeb4eac1bd5_12_boot,"backend.Input","boot",0x328e2950,"backend.Input.boot","backend/Input.hx",12,0xec0a45af)
namespace backend{

void Input_obj::__construct() { }

Dynamic Input_obj::__CreateEmpty() { return new Input_obj; }

void *Input_obj::_hx_vtable = 0;

Dynamic Input_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Input_obj > _hx_result = new Input_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Input_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0e1d42ba;
}

::String Input_obj::mainInputJson;


Input_obj::Input_obj()
{
}

bool Input_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 13:
		if (HX_FIELD_EQ(inName,"mainInputJson") ) { outValue = ( mainInputJson ); return true; }
	}
	return false;
}

bool Input_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 13:
		if (HX_FIELD_EQ(inName,"mainInputJson") ) { mainInputJson=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Input_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Input_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Input_obj::mainInputJson,HX_("mainInputJson",d9,57,1d,c7)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Input_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Input_obj::mainInputJson,"mainInputJson");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Input_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Input_obj::mainInputJson,"mainInputJson");
};

#endif

::hx::Class Input_obj::__mClass;

static ::String Input_obj_sStaticFields[] = {
	HX_("mainInputJson",d9,57,1d,c7),
	::String(null())
};

void Input_obj::__register()
{
	Input_obj _hx_dummy;
	Input_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.Input",10,d0,5f,93);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Input_obj::__GetStatic;
	__mClass->mSetStaticField = &Input_obj::__SetStatic;
	__mClass->mMarkFunc = Input_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Input_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Input_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Input_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Input_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Input_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Input_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_9eabdfeb4eac1bd5_12_boot)
HXDLIN(  12)		mainInputJson = ::backend::JsonFunctions_obj::loadJson(HX_("controls/controls",6f,c8,e4,7f));
            	}
}

} // end namespace backend
