/*
	This is an example port of the current MainMenuState

	We will do full ports of all menus to softcode once state softcoding is more pleasant to use
*/

import funkin.states.PlayState;

var bg:FlxSprite;
var mainMenu:ScrollableMenu;
var menuOptions:FlxTypedGroup<FlxSprite>;
var curItem:Int = 0;
var transition:Transition;

var mainMenuOptions:Array<String> = ['StoryMode', 'Freeplay', 'Options', 'Credits'];
var mainMenuSparrow:Array<String> = ['story_mode', 'freeplay', 'options', 'credits'];

function create()
{
	if (FlxG.sound.music == null || !FlxG.sound.music.playing)
	{
		FlxG.sound.playMusic(Paths.audio('freakyMenu', 'audio/music', PathSource.ENGINE));
	}

	bg = new FlxSprite().loadGraphic(Paths.image("menuBG", 'images/states/mainMenu', PathSource.ENGINE));
	bg.screenCenter();
	add(bg);

	menuOptions = new FlxTypedGroup();
	trace(menuOptions.zIndex);
	menuOptions.zIndex = 10;
	add(menuOptions);

	for (i in 0...mainMenuOptions.length)
	{
		var yIterator:Float = (i * (100 + 75)) + 62.5;
		var item:FlxSprite = new FlxSprite();
		item.frames = Paths.sparrow("menu_" + mainMenuSparrow[i], 'images/states/mainMenu', PathSource.ENGINE);
		item.animation.addByPrefix('idle', mainMenuSparrow[i] + ' idle', 24, true);
		item.animation.addByPrefix('selected', mainMenuSparrow[i] + ' selected', 24, true);
		item.animation.play('idle', true);
		item.y = yIterator;
		item.screenCenter(FlxAxes.X);
		item.updateHitbox();
		menuOptions.add(item);
	}

	scroll(0);

	transition = new Transition();
	add(transition);
	transition.play(1);

	SortUtil.reorder(this);
}

function update(elapsed:Float)
{
	// gets input from custom input callouts (CoolInput) and checks if it is just pressed
	if (CoolInput.pressed("accept"))
	{
		switch (curItem)
		{
			case 0:
				FlxG.switchState(() -> new PlayState());
			case 1:
				transition.play(-1);
				new FlxTimer().start(1.5, function(tmr:FlxTimer)
				{
					FlxG.switchState(() -> new FreeplayState());
				});
		}
	}
	if (CoolInput.pressed("uiDown"))
	{
		scroll(-1);
	}
	else if (CoolInput.pressed("uiUp"))
	{
		scroll(1);
	}
	else if (CoolInput.pressed("return"))
	{
		transition.play(-1);
		new FlxTimer().start(1.5, function(tmr:FlxTimer)
		{
			FlxG.switchState(() -> new TitleState());
		});
	}
}

function scroll(value:Int)
{
	menuOptions.members[curItem].animation.play('idle');
	menuOptions.members[curItem].updateHitbox();
	value *= -1;
	if (curItem + value >= menuOptions.length)
	{
		curItem = 0;
	}
	else if (curItem + value < 0)
	{
		curItem = menuOptions.length - 1;
	}
	else
	{
		curItem += value;
	}
	FlxG.sound.play(Paths.audio('scrollMenu', 'audio/sounds', PathSource.ENGINE));

	menuOptions.members[curItem].animation.play('selected');
	menuOptions.members[curItem].centerOffsets();
	menuOptions.members[curItem].screenCenter(FlxAxes.X);
}
