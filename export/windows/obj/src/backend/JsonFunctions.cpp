// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_backend_JsonFunctions
#include <backend/JsonFunctions.h>
#endif
#ifndef INCLUDED_backend_Paths
#include <backend/Paths.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_d2f89b62824f0d39_8_loadJson,"backend.JsonFunctions","loadJson",0x30636163,"backend.JsonFunctions.loadJson","backend/JsonFunctions.hx",8,0x6dc3e546)
namespace backend{

void JsonFunctions_obj::__construct() { }

Dynamic JsonFunctions_obj::__CreateEmpty() { return new JsonFunctions_obj; }

void *JsonFunctions_obj::_hx_vtable = 0;

Dynamic JsonFunctions_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< JsonFunctions_obj > _hx_result = new JsonFunctions_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool JsonFunctions_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x78cac55f;
}

::String JsonFunctions_obj::loadJson(::String jsonPath){
            	HX_GC_STACKFRAME(&_hx_pos_d2f89b62824f0d39_8_loadJson)
HXLINE(   9)		::String jsonVal = ::sys::io::File_obj::getContent(::backend::Paths_obj::json(jsonPath));
HXLINE(  10)		::String json = ( (::String)( ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,jsonVal)->doParse()) );
HXLINE(  11)		return json;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(JsonFunctions_obj,loadJson,return )


JsonFunctions_obj::JsonFunctions_obj()
{
}

bool JsonFunctions_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"loadJson") ) { outValue = loadJson_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *JsonFunctions_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *JsonFunctions_obj_sStaticStorageInfo = 0;
#endif

::hx::Class JsonFunctions_obj::__mClass;

static ::String JsonFunctions_obj_sStaticFields[] = {
	HX_("loadJson",6e,13,08,b7),
	::String(null())
};

void JsonFunctions_obj::__register()
{
	JsonFunctions_obj _hx_dummy;
	JsonFunctions_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.JsonFunctions",19,a5,ce,6a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &JsonFunctions_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(JsonFunctions_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< JsonFunctions_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = JsonFunctions_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = JsonFunctions_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace backend
